{"version":3,"file":"createAlouetteTamagui-browser.es.js","sources":["../src/config/animations.web.ts","../src/config/createAlouetteFonts.ts","../src/config/Breakpoints.ts","../src/config/media.ts","../src/config/createAlouetteTokens.ts","../src/config/themes.ts","../src/config/colorScales.ts","../src/createAlouetteTamagui.ts"],"sourcesContent":["import { createAnimations } from \"@tamagui/animations-css\";\n\nexport const animations = createAnimations({\n  fast: \"ease-in 150ms\",\n  formElement: \"ease-in 600ms\",\n});\nconsole.log(\"animations: web\");\n","import { createFont } from \"@tamagui/core\";\n\nconst defaultHeadingFontSizes = { xl: 48, lg: 40, md: 32, sm: 24, xs: 18 };\nconst defaultBodyFontSizes = { xl: 24, lg: 18, md: 16, sm: 14, xs: 12 };\n\nconst roundWith1Precision = (value: number): number =>\n  Math.round(value * 10) / 10;\n\nexport interface AlouetteFontsOptions {\n  headingFontFamily?: string;\n  headingFontSizes?: typeof defaultHeadingFontSizes;\n  bodyFontFamily?: string;\n  bodyFontSizes?: typeof defaultBodyFontSizes;\n}\n\nexport const createAlouetteFonts = ({\n  headingFontFamily = \"Inter\",\n  headingFontSizes = defaultHeadingFontSizes,\n  bodyFontFamily = \"Inter\",\n  bodyFontSizes = defaultBodyFontSizes,\n}: AlouetteFontsOptions = {}) => ({\n  heading: createFont({\n    family: headingFontFamily,\n    weight: {\n      regular: \"400\",\n      bold: \"700\",\n      black: \"900\",\n    },\n    face: {\n      400: { normal: `${headingFontFamily}Regular` },\n      700: { normal: `${headingFontFamily}Bold` },\n      900: { normal: `${headingFontFamily}Black` },\n    },\n    size: headingFontSizes,\n    lineHeight: {\n      xl: roundWith1Precision(1.1 * headingFontSizes.xl),\n      lg: roundWith1Precision(1.1 * headingFontSizes.lg),\n      md: roundWith1Precision(1.2 * headingFontSizes.md),\n      sm: roundWith1Precision(1.3 * headingFontSizes.sm),\n      xs: roundWith1Precision(1.3 * headingFontSizes.xs),\n    },\n  }),\n  body: createFont({\n    family: bodyFontFamily,\n    weight: {\n      regular: \"400\",\n      bold: \"700\",\n      black: \"900\",\n    },\n    face: {\n      400: { normal: `${bodyFontFamily}Regular` },\n      700: { normal: `${bodyFontFamily}Bold` },\n      900: { normal: `${bodyFontFamily}Black` },\n    },\n    size: bodyFontSizes,\n    lineHeight: {\n      xl: roundWith1Precision(1.4 * bodyFontSizes.xl),\n      lg: roundWith1Precision(1.4 * bodyFontSizes.lg),\n      md: roundWith1Precision(1.4 * bodyFontSizes.md),\n      sm: roundWith1Precision(1.4 * bodyFontSizes.sm),\n      xs: roundWith1Precision(1.4 * bodyFontSizes.xs),\n    },\n  }),\n});\n","export const Breakpoints = {\n  /**\n   * min-width: 0\n   */\n  BASE: 0,\n  /**\n   * min-width: 480px\n   */\n  SMALL: 480,\n  /**\n   * min-width: 768px\n   */\n  MEDIUM: 768,\n  /**\n   * min-width: 1024px\n   */\n  LARGE: 1024,\n  /**\n   * min-width: 1280px\n   */\n  WIDE: 1280,\n} as const;\n\nexport type Breakpoint = (typeof Breakpoints)[keyof typeof Breakpoints];\nexport type BreakpointNames = \"base\" | \"large\" | \"medium\" | \"small\" | \"wide\";\n\nexport enum BreakpointNameEnum {\n  BASE = \"base\",\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n  WIDE = \"wide\",\n}\n","import { Breakpoints } from \"./Breakpoints\";\n\nexport const media = {\n  small: { minWidth: Breakpoints.SMALL },\n  medium: { minWidth: Breakpoints.MEDIUM },\n  large: { minWidth: Breakpoints.LARGE },\n  wide: { minWidth: Breakpoints.WIDE },\n} as const;\n","import { createTokens } from \"@tamagui/core\";\nimport type { IntRange } from \"type-fest\";\nimport type {\n  AlouetteColorScaleNumber,\n  AlouetteColorScales,\n} from \"./colorScales\";\n\ntype AlouetteSize = IntRange<0, 64>;\ntype NegativeAlouetteSize = `-${AlouetteSize}`;\ntype AlouetteSizeRecord = Record<AlouetteSize, number>;\ntype NegativeAlouetteSizeRecord = Record<NegativeAlouetteSize, number>;\n\nconst createAlouetteSizes = <const N extends boolean>(\n  spacing: number,\n  negative: N,\n): N extends true ? NegativeAlouetteSizeRecord : AlouetteSizeRecord => {\n  const MAX_SIZE = 64;\n  const sizes: Partial<\n    N extends true ? NegativeAlouetteSizeRecord : AlouetteSizeRecord\n  > = {};\n  for (let size = 0; size <= MAX_SIZE; size++) {\n    (sizes as any)[negative ? `-${size}` : `${size}`] = size * spacing;\n  }\n  return sizes as N extends true\n    ? NegativeAlouetteSizeRecord\n    : AlouetteSizeRecord;\n};\n\ntype ColorScaleTokens<ColorScales extends AlouetteColorScales> = {\n  [K in string &\n    keyof ColorScales as `${K}.${AlouetteColorScaleNumber}`]: string; //(typeof colorScales)[K][AlouetteColorScaleNumber];\n};\n\nconst transformColorScalesToTokens = <ColorScales extends AlouetteColorScales>(\n  colorScales: ColorScales,\n): ColorScaleTokens<ColorScales> => {\n  return Object.fromEntries(\n    Object.entries(colorScales).flatMap(([colorName, colorScale]) => {\n      return Object.entries(colorScale).map(([scaleNumber, colorValue]) => {\n        return [`${colorName}.${scaleNumber}`, colorValue];\n      });\n    }),\n  ) as ColorScaleTokens<ColorScales>;\n};\n\nexport interface AlouetteTokensOptions {\n  spacing?: number;\n}\n\nexport const createAlouetteTokens = <\n  const ColorScales extends AlouetteColorScales,\n>(\n  colorScales: ColorScales,\n  { spacing = 4 }: AlouetteTokensOptions = {},\n) => {\n  const sizes: AlouetteSizeRecord = createAlouetteSizes(spacing, false);\n  const negativeSizes: NegativeAlouetteSizeRecord = createAlouetteSizes(\n    -spacing,\n    true,\n  );\n\n  return createTokens({\n    color: {\n      black: \"#000000\",\n      white: \"#ffffff\",\n      ...transformColorScalesToTokens(colorScales),\n    },\n    radius: {\n      ...sizes,\n      xs: spacing * 2,\n      sm: spacing * 4,\n      md: spacing * 8,\n    },\n    space: {\n      ...sizes,\n      ...negativeSizes,\n      xs: spacing * 2,\n      sm: spacing * 4,\n      md: spacing * 8,\n    },\n    size: { ...sizes },\n    zIndex: {},\n  } as const);\n};\n","/* eslint-disable camelcase */\nimport type { Variable } from \"@tamagui/core\";\nimport type {\n  AlouetteColorScaleNumber,\n  AlouetteColorScales,\n} from \"./colorScales\";\nimport type { createAlouetteTokens } from \"./createAlouetteTokens\";\n\n// export interface MinimalRootTheme {\n//   backgroundColor: Variable<string>;\n//   textColor: Variable<string>;\n// }\n\n// export interface RootTheme {\n//   backgroundColor: Variable<string>;\n//   textColor: Variable<string>;\n// }\n\nexport interface ColorTheme {\n  backgroundColor: Variable<string>;\n  textColor: Variable<string>;\n  contrastTextColor: Variable<string>;\n  \"textColor:disabled\": Variable<string>;\n  \"contrastTextColor:disabled\": Variable<string>;\n  mainColor: Variable<string>;\n  mainTextColor: Variable<string>;\n  borderColor: Variable<string>;\n\n  \"interactive.contained.backgroundColor\": Variable<string>;\n  \"interactive.borderColor\": Variable<string>;\n\n  \"interactive.contained.backgroundColor:hover\": Variable<string>;\n  \"interactive.outlined.backgroundColor:hover\": Variable<string>;\n  \"interactive.borderColor:hover\": Variable<string>;\n\n  \"interactive.contained.backgroundColor:focus\": Variable<string>;\n  \"interactive.outlined.backgroundColor:focus\": Variable<string>;\n  \"interactive.borderColor:focus\": Variable<string>;\n\n  \"interactive.contained.backgroundColor:press\": Variable<string>;\n  \"interactive.outlined.backgroundColor:press\": Variable<string>;\n  \"interactive.borderColor:press\": Variable<string>;\n\n  \"interactive.contained.backgroundColor:disabled\": Variable<string>;\n  \"interactive.borderColor:disabled\": Variable<string>;\n  \"interactive.textColor:disabled\": Variable<string>;\n\n  \"interactive.forms.textColor\": Variable<string>;\n  \"interactive.forms.placeholderTextColor\": Variable<string>;\n  // \"interactive.forms.backgroundColor\": Variable<string>,\n  // \"interactive.forms.backgroundColor:hover\": Variable<string>,\n  \"interactive.forms.backgroundColor:focus\": Variable<string>;\n  \"interactive.forms.backgroundColor:press\": Variable<string>;\n  \"interactive.forms.borderColor\": Variable<string>;\n  \"interactive.forms.borderColor:hover\": Variable<string>;\n  \"interactive.forms.borderColor:focus\": Variable<string>;\n  \"interactive.forms.borderColor:press\": Variable<string>;\n  \"interactive.forms.borderColor:disabled\": Variable<string>;\n}\n\n// export interface FullTheme extends ColorTheme, RootTheme {}\nexport type FullTheme = ColorTheme;\n\n// export const createRootTheme = <T extends MinimalRootTheme>(\n//   theme: T,\n// ): FullTheme => {\n//   return theme satisfies RootTheme as unknown as FullTheme;\n// };\n\nconst darkModeScaleNumbers: Record<\n  AlouetteColorScaleNumber,\n  AlouetteColorScaleNumber\n> = {\n  1: 10,\n  2: 9,\n  3: 8,\n  4: 7,\n  5: 6,\n  6: 5,\n  7: 4,\n  8: 3,\n  9: 2,\n  10: 1,\n};\n\nexport const createColorTheme = <const ColorScales extends AlouetteColorScales>(\n  tokens: ReturnType<typeof createAlouetteTokens<ColorScales>>,\n  colorScaleName: string & keyof ColorScales,\n  mode: \"dark\" | \"light\" = \"light\",\n  backgroundColor?: Variable<string>,\n  textColor?: Variable<string>,\n  contrastTextColor?: Variable<string>,\n) => {\n  const alouetteTokens: ReturnType<\n    typeof createAlouetteTokens<AlouetteColorScales>\n  > = tokens;\n  if (!backgroundColor) {\n    backgroundColor =\n      mode === \"dark\" ? alouetteTokens.color.black : alouetteTokens.color.white;\n  }\n  if (!textColor) {\n    textColor =\n      mode === \"dark\" ? alouetteTokens.color.white : alouetteTokens.color.black;\n  }\n  if (!contrastTextColor) {\n    if (colorScaleName === \"grayscale\") {\n      contrastTextColor =\n        mode === \"dark\"\n          ? alouetteTokens.color.white\n          : alouetteTokens.color.black;\n    } else {\n      contrastTextColor =\n        mode === \"dark\"\n          ? alouetteTokens.color.black\n          : alouetteTokens.color.white;\n    }\n  }\n\n  const getColor = (\n    lightScaleNumber: AlouetteColorScaleNumber,\n    forceScaleNumber = colorScaleName,\n  ) => {\n    // Invert scale for dark mode\n    const scaleNumber =\n      mode === \"dark\"\n        ? darkModeScaleNumbers[lightScaleNumber]\n        : lightScaleNumber;\n\n    return tokens.color[\n      `${forceScaleNumber}.${scaleNumber}` as keyof typeof tokens.color\n    ];\n  };\n\n  return {\n    backgroundColor,\n    textColor,\n    mainColor: getColor(6),\n    mainTextColor: getColor(9),\n    contrastTextColor,\n    borderColor: getColor(8),\n    \"textColor:disabled\": getColor(3, \"grayscale\"),\n    \"contrastTextColor:disabled\": getColor(7, \"grayscale\"),\n\n    \"interactive.contained.backgroundColor\": getColor(5),\n    \"interactive.borderColor\": getColor(mode === \"dark\" ? 5 : 8),\n\n    \"interactive.contained.backgroundColor:hover\": getColor(4),\n    \"interactive.outlined.backgroundColor:hover\": getColor(1),\n    \"interactive.borderColor:hover\": getColor(mode === \"dark\" ? 5 : 7),\n\n    \"interactive.contained.backgroundColor:focus\": getColor(4),\n    \"interactive.outlined.backgroundColor:focus\": getColor(1),\n    \"interactive.borderColor:focus\": getColor(7),\n\n    \"interactive.contained.backgroundColor:press\": getColor(2),\n    \"interactive.outlined.backgroundColor:press\": getColor(3),\n    \"interactive.borderColor:press\": getColor(7),\n\n    \"interactive.contained.backgroundColor:disabled\": getColor(3, \"grayscale\"),\n    \"interactive.borderColor:disabled\": getColor(3, \"grayscale\"),\n    \"interactive.textColor:disabled\": getColor(7, \"grayscale\"),\n\n    \"interactive.forms.textColor\": textColor,\n    \"interactive.forms.placeholderTextColor\": getColor(3, \"grayscale\"),\n\n    // \"interactive.forms.backgroundColor\": undefined,\n    // \"interactive.forms.backgroundColor:hover\": undefined,\n    \"interactive.forms.backgroundColor:focus\": getColor(1),\n    \"interactive.forms.backgroundColor:press\": getColor(3),\n    \"interactive.forms.borderColor\": getColor(10),\n    \"interactive.forms.borderColor:hover\": getColor(7),\n    \"interactive.forms.borderColor:focus\": getColor(7),\n    \"interactive.forms.borderColor:press\": getColor(7),\n    \"interactive.forms.borderColor:disabled\": getColor(3, \"grayscale\"),\n  } satisfies FullTheme;\n};\n\nexport const createAlouetteThemes = <\n  const ColorScales extends AlouetteColorScales,\n>(\n  tokens: ReturnType<typeof createAlouetteTokens<ColorScales>>,\n) => {\n  const alouetteTokens: ReturnType<\n    typeof createAlouetteTokens<AlouetteColorScales>\n  > = tokens;\n  return {\n    light: createColorTheme(alouetteTokens, \"grayscale\", \"light\"),\n    light_info: createColorTheme(alouetteTokens, \"info\", \"light\"),\n    light_success: createColorTheme(alouetteTokens, \"success\", \"light\"),\n    light_warning: createColorTheme(alouetteTokens, \"warning\", \"light\"),\n    light_danger: createColorTheme(alouetteTokens, \"danger\", \"light\"),\n    light_primary: createColorTheme(alouetteTokens, \"primary\", \"light\"),\n\n    dark: createColorTheme(alouetteTokens, \"grayscale\", \"dark\"),\n    dark_info: createColorTheme(alouetteTokens, \"info\", \"dark\"),\n    dark_success: createColorTheme(alouetteTokens, \"success\", \"dark\"),\n    dark_warning: createColorTheme(alouetteTokens, \"warning\", \"dark\"),\n    dark_danger: createColorTheme(alouetteTokens, \"danger\", \"dark\"),\n    dark_primary: createColorTheme(alouetteTokens, \"primary\", \"dark\"),\n  } as const;\n};\n","import type { IntRange } from \"type-fest\";\n\n// scale inspired by https://www.radix-ui.com/colors/docs/palette-composition/understanding-the-scale\n// 1: interactive outlined background hover/focus color\n// 2: interactive contained background press color\n// 3: interactive outlined background press color\n// 4: interactive contained background hover/focus color\n// 5: interactive contained background color\n// 6: main color\n// 7: border hover/focus color\n// 8: border color\n// 9: text color\n// 10: form border color (default)\n\nexport type AlouetteColorScaleNumber = IntRange<1, 11>;\n\nexport type AlouetteColorScale = Record<AlouetteColorScaleNumber, string>;\n\nexport const createColorScale = <const T extends AlouetteColorScale>(\n  colorScale: T,\n): T => colorScale;\n\nexport type AlouetteColorScaleNames =\n  | \"danger\"\n  | \"grayscale\"\n  | \"info\"\n  | \"primary\"\n  | \"success\"\n  | \"warning\";\n\nexport type ColorScaleTokens = {\n  [K in AlouetteColorScaleNames as `${K}.${AlouetteColorScaleNumber}`]: string; //(typeof colorScales)[K][AlouetteColorScaleNumber];\n};\n\nexport type AlouetteColorScales = Record<\n  AlouetteColorScaleNames,\n  AlouetteColorScale\n>;\n\n// Tool: https://m2.material.io/inline-tools/color/\n\nexport const defaultColorScales: AlouetteColorScales = {\n  grayscale: createColorScale({\n    1: \"#faf9f8\",\n    2: \"#f4f3ef\",\n    3: \"#ebe9e5\",\n    4: \"#dedad2\",\n    5: \"#d1cdc5\",\n    6: \"#bab8ae\",\n    7: \"#aeaba3\",\n    8: \"#9c9a92\",\n    9: \"#8e8c83\",\n    10: \"#74726a\",\n  }),\n  success: createColorScale({\n    1: \"#f0f9f3\",\n    2: \"#d4f0d4\",\n    3: \"#a8e6a8\",\n    4: \"#7edc7e\",\n    5: \"#54d254\",\n    6: \"#2ac82a\",\n    7: \"#00be00\",\n    8: \"#00b400\",\n    9: \"#00aa00\",\n    10: \"#009200\",\n  }),\n  info: createColorScale({\n    1: \"#f0f9ff\",\n    2: \"#d4f0ff\",\n    3: \"#a8e6ff\",\n    4: \"#7edcff\",\n    5: \"#54d2ff\",\n    6: \"#2ac8ff\",\n    7: \"#00beff\",\n    8: \"#00b4ff\",\n    9: \"#00aaff\",\n    10: \"#0092ff\",\n  }),\n  warning: createColorScale({\n    1: \"#fff9f0\",\n    2: \"#fff0d4\",\n    3: \"#ffe6a8\",\n    4: \"#ffdc7e\",\n    5: \"#ffd254\",\n    6: \"#ffc82a\",\n    7: \"#ffbe00\",\n    8: \"#ffb400\",\n    9: \"#ffaa00\",\n    10: \"#ff9200\",\n  }),\n  danger: createColorScale({\n    1: \"#fff0f0\",\n    2: \"#ffd4d4\",\n    3: \"#ffaaaa\",\n    4: \"#ff7e7e\",\n    5: \"#ff5454\",\n    6: \"#ff2a2a\",\n    7: \"#ff0000\",\n    8: \"#f40000\",\n    9: \"#ea0000\",\n    10: \"#d20000\",\n  }),\n  primary: createColorScale({\n    1: \"#e1f4f6\",\n    2: \"#b4e2e9\",\n    3: \"#86cfdc\",\n    4: \"#60bcd0\",\n    5: \"#46aeca\",\n    6: \"#31a1c4\",\n    7: \"#2994b7\",\n    8: \"#1e82a6\",\n    9: \"#1c7193\",\n    10: \"#125272\",\n  }),\n} as const;\n","import { createTamagui } from \"@tamagui/core\";\nimport { animations } from \"./config/animations\";\nimport type { AlouetteColorScales } from \"./config/colorScales\";\nimport type { AlouetteFontsOptions } from \"./config/createAlouetteFonts\";\nimport { createAlouetteFonts } from \"./config/createAlouetteFonts\";\nimport type { createAlouetteTokens } from \"./config/createAlouetteTokens\";\nimport { media } from \"./config/media\";\nimport type { createAlouetteThemes } from \"./config/themes\";\n\nexport { createAlouetteTokens } from \"./config/createAlouetteTokens\";\n\nexport interface AlouetteTamaguiOptions {\n  fonts?: AlouetteFontsOptions;\n}\n\nexport {\n  createColorTheme,\n  createAlouetteThemes,\n  type FullTheme,\n} from \"./config/themes\";\n\nexport {\n  defaultColorScales,\n  createColorScale,\n  type AlouetteColorScales,\n  type AlouetteColorScale,\n} from \"./config/colorScales\";\n\nexport const createAlouetteTamagui = <\n  const ColorScales extends AlouetteColorScales,\n  const Tokens extends ReturnType<typeof createAlouetteTokens<ColorScales>>,\n  const Themes extends ReturnType<typeof createAlouetteThemes<ColorScales>>,\n>(\n  tokens: Tokens,\n  themes: Themes,\n  options: AlouetteTamaguiOptions = {},\n) => {\n  return createTamagui({\n    fonts: createAlouetteFonts(options.fonts),\n    tokens,\n    themes,\n    media,\n    animations,\n    settings: {\n      allowedStyleValues: \"somewhat-strict-web\",\n      autocompleteSpecificTokens: \"except-special\",\n    },\n    components: [\"alouette\"],\n  } as const);\n};\n"],"names":[],"mappings":"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"}