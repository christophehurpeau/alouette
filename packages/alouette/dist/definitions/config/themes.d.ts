import type { Variable } from "@tamagui/core";
import { createAlouetteTokens } from "./createAlouetteTokens";
export declare const createAlouetteThemes: (tokens: ReturnType<typeof createAlouetteTokens>) => {
    readonly light: {
        backgroundColor: Variable<string>;
        textColor: Variable<string>;
    };
    readonly light_info: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly light_success: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly light_warning: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly light_danger: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly light_primary: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly dark: {
        backgroundColor: Variable<string>;
        textColor: Variable<string>;
    };
    readonly dark_info: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly dark_success: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly dark_warning: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly dark_danger: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
    readonly dark_primary: {
        mainColor: Variable<string>;
        mainTextColor: Variable<string>;
        contrastTextColor: Variable<string>;
        borderColor: Variable<string>;
        "interactive.contained.backgroundColor": Variable<string>;
        "interactive.borderColor": Variable<string>;
        "interactive.contained.backgroundColor:hover": Variable<string>;
        "interactive.outlined.backgroundColor:hover": Variable<string>;
        "interactive.borderColor:hover": Variable<string>;
        "interactive.contained.backgroundColor:focus": Variable<string>;
        "interactive.outlined.backgroundColor:focus": Variable<string>;
        "interactive.borderColor:focus": Variable<string>;
        "interactive.contained.backgroundColor:press": Variable<string>;
        "interactive.outlined.backgroundColor:press": Variable<string>;
        "interactive.borderColor:press": Variable<string>;
        "interactive.contained.backgroundColor:disabled": Variable<string>;
        "interactive.borderColor:disabled": Variable<string>;
        "interactive.textColor:disabled": Variable<string>;
        "interactive.forms.textColor": Variable<string>;
        "interactive.forms.backgroundColor:focus": Variable<string>;
        "interactive.forms.backgroundColor:press": Variable<string>;
        "interactive.forms.borderColor": Variable<string>;
        "interactive.forms.borderColor:hover": Variable<string>;
        "interactive.forms.borderColor:focus": Variable<string>;
        "interactive.forms.borderColor:press": Variable<string>;
        "interactive.forms.borderColor:disabled": Variable<string>;
    };
};
//# sourceMappingURL=themes.d.ts.map